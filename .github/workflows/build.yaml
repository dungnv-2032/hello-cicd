name: cd-rollback
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    types:
      - closed
jobs:
  build_and_tag_image:
    runs-on: ubuntu-latest
    name: tag_current_version
    steps:
      - name: Login Docker Hub
        id: login_docker_hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: set variable RepoDigests
        run:  docker inspect ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:latest
      - name: print RepoDigests
        run: echo "$RepoDigests"
      - name: Set variable $VERSION
        run: echo "VERSION=latest"

      - name: Set variable $previous
        run: echo "PREVIOUS=${{ github.sha }}"

#      - name: Build and tag image PREVIOUS
#        id: build_and_tag_image_previous
#        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:$PREVIOUS

#      - name: checkout
#        uses: actions/checkout@v2
#
#      - name: Build and tag image $VERSION
#        id: build_and_tag_previous
#        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:$VERSION
#

#          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:latest
#          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:latest ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:previous
#          docker push ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:previous

#  send_notify_approve:
#    name: send_notify_approve
#    runs-on: ubuntu-latest
#    needs: build_and_tag_image
#    if: success()
#    steps:
#      # Notify Slack with an interactive message
#      - name: Send custom JSON data to Slack workflow
#        id: slack
#        uses: slackapi/slack-github-action@v1.25.0
#        with:
#          payload: |
#            {
#              "text": "Có một bản release cần được approve.\nENV: staging\nRepository: ${{ github.repository }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
#
#  push:
#    environment: staging
#    name: build_and_push
#    runs-on: ubuntu-latest
#    needs: send_notify_approve
#    if: success()
#    steps:
#      - name: Push Image
#        run: |
#          docker push ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:$VERSION
#
#  send_notify_success:
#    name: send_notify_success
#    runs-on: ubuntu-latest
#    needs: build_and_push
#    if: success()
#    steps:
#    - name: Report Status success
#      id: slack_success
#      uses: slackapi/slack-github-action@v1.25.0
#      with:
#        payload: |
#          {
#            "text": "Deloy finished !"
#          }
#      env:
#        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
#        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
#
#  send_notify_failure:
#    name: send_notify_failure
#    runs-on: ubuntu-latest
#    if: failure()
#    needs: build_and_push
#    steps:
#      - name: Report Status fail
#        id: slack_fail
#        uses: slackapi/slack-github-action@v1.25.0
#        with:
#          payload: |
#            {
#              "text": "Deloy Fail !"
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
#      # - name: Check version
#      #   id: check_version
#      #   run: |
#      #     docker manifest inspect $REPO$VERSION> /dev/null ; echo $?
#
#
#  rollback:
#    name: rollback
#    runs-on: ubuntu-latest
#    needs: send_notify_failure
#    if: failure()
#    steps:
#      - name: Push Docker Image
#        id: docker_pre_build
#        run: |
#          docker tag $REPO$VERSION $REPO$LATEST
#          docker push $REPO$LATEST