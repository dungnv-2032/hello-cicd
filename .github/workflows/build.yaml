name: cd-rollback
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    types:
      - closed
jobs:
  tag_current_version:
    runs-on: ubuntu-latest
    name: tag_current_version
    steps:
      - name: Get current docker image and add tag
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:latest
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:latest ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:${{ github.sha }}

  send_notify_approve:
    name: send_notify_approve
    runs-on: ubuntu-latest
    needs: tag_current_version
    if: success()
    steps:
      # Notify Slack with an interactive message
      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Có một bản release cần được approve.\nENV: staging\nRepository: ${{ github.repository }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  build_and_push:
    environment: staging
    name: build_and_push
    runs-on: ubuntu-latest
    needs: send_notify_approve
    if: success()
    steps:
      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - uses: actions/checkout@v2

      - name: Build and Push Docker Image
        run: |
          docker build -t dungc/hello-cicd:${{ github.sha }} .
          docker tag dungc/hello-cicd:latest
          docker push dungc/hello-cicd:latest

  send_notify_success:
    name: send_notify_success
    runs-on: ubuntu-latest
    needs: build_and_push
    if: success()
    steps:
    - name: Report Status success
      id: slack_success
      uses: slackapi/slack-github-action@v1.25.0
      with:
        payload: |
          {
            "text": "Deloy finished !"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  send_notify_failure:
    name: send_notify_failure
    runs-on: ubuntu-latest
    if: failure()
    needs: build_and_push
    steps:
      - name: Report Status fail
        id: slack_fail
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Deloy Fail !"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  rollback:
    name: rollback
    runs-on: ubuntu-latest
    needs: send_notify_failure
    if: failure()
    steps:
      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Push Docker Image
        id: docker_pre_build
        run: |
          docker tag dungc/hello-cicd:${{ github.sha }} dungc/hello-cicd:latest
          docker push dungc/hello-cicd:latest