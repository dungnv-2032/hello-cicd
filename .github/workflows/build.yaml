name: ci-cd
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    types:
      - closed
jobs:
  deploy_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Add your deployment steps here, such as building and deploying your application
      - name: Deploying Application
        run: echo "Deploying application..."
        
      # Notify Slack with an interactive message
      - name: Notify Slack
        if: always()
        uses: rtCamp/action-slack-notify@v2
        with:
          status: ${{ job.status }}
          text: |
            *Deployment Status*:
            - Repository: ${{ github.repository }}
            - Branch: ${{ github.ref }}
            - Commit: ${{ github.sha }}
            - Status: ${{ job.status }}
            - Event Name: ${{ github.event_name }}
            - Event Path: ${{ github.event_path }}
            - Action Run ID: ${{ github.run_id }}
            - Action Run Number: ${{ github.run_number }}
            - Please approve or cancel this deployment.
          author_name: GitHub Actions
          interactive: true
          author_icon: 'https://github.com/github.png'
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  approval:
    needs: deploy_release
    runs-on: ubuntu-latest
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'pending'
    steps:
      - name: Wait for approval
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: context.payload.deployment.id,
              state: 'success',
              log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              description: 'Deployment approved and in progress.',
              environment_url: 'https://github.com/dungnv-2032/hello-cicd/tree/master'
            })
            return 'approved'

  cancel:
    needs: deploy_release
    runs-on: ubuntu-latest
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'pending'
    steps:
      - name: Wait for cancelation
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: context.payload.deployment.id,
              state: 'failure',
              log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              description: 'Deployment canceled.',
              environment_url: 'https://github.com/dungnv-2032/hello-cicd/tree/master'
            })
            return 'canceled'