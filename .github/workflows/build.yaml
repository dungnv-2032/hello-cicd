name: ci-cd
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    types:
      - closed
jobs:
  deploy_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Add your deployment steps here, such as building and deploying your application
      - name: Deploying Application
        run: echo "Deploying application..."

      # Notify Slack with an interactive message
      - name: Report Status
        uses: slackapi/slack-github-action@v1.22.0
        with:
          channel-id: "C06SM71HT0U"
          payload: {
              "fallback": "Required text summary of the attachment that is shown by clients that understand attachments but choose not to show them.",

              "text": "Optional text that should appear within the attachment",
              "pretext": "Optional text that should appear above the formatted data",

              "color": "#36a64f", // Can either be one of “good”, “warning”, “danger” or any hex colour code

              // Fields are displayed in a table on the message
              "fields": [
                {
                  "title": "Required field title", // The title cannot contain markup and will be escaped for you
                  "value": "Text value of the field. Can contain standard message markup and must be escaped as normal. Can be multi-line.",
                  "short": false // Optional flag indicating whether the `value` is short enough to be displayed side-by-side with other values
                }
              ]
            }
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_WEBHOOK }}

  approved:
    needs: deploy_release
    runs-on: ubuntu-latest
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'pending'
    steps:
      - name: Wait for approval
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: context.payload.deployment.id,
              state: 'success',
              log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              description: 'Deployment approved and in progress.',
              environment_url: 'https://github.com/dungnv-2032/hello-cicd/tree/master'
            })
            return 'approved'

  cancel:
    needs: deploy_release
    runs-on: ubuntu-latest
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'pending'
    steps:
      - name: Wait for cancelation
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: context.payload.deployment.id,
              state: 'failure',
              log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              description: 'Deployment canceled.',
              environment_url: 'https://github.com/dungnv-2032/hello-cicd/tree/master'
            })
            return 'canceled'