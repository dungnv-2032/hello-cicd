name: ci-cd
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    types:
      - closed
jobs:
  build:
    if: github.event.pull_request.merged == true
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Login Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Get current docker image and add tag
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:latest
          docker build \
          -t ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:previous_version \
          -f ./Dockerfile \
          --cache-from ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:previous_version .
#          # Gắn tag mới cho Docker image hiện tại
#          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:latest ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd:previous_version
      - uses: actions/checkout@v2

#      # Notify Slack with an interactive message
#      - name: Send custom JSON data to Slack workflow
#        id: slack
#        uses: slackapi/slack-github-action@v1.25.0
#        with:
#          payload: |
#            {
#              "text": "Có một bản release cần được approve.\nENV: staging\nRepository: ${{ github.repository }}\nGitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

#      - name: Setup Docker Buildx
#        uses: docker/setup-buildx-action@v1
#        id: buildx
#
#      - name: Cache Docker Image Layers
#        uses: actions/cache@v2
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-
#
#      - name: Build and Push Docker Image
#        uses: docker/build-push-action@v2
#        id: docker_build
#        with:
#          context: ./
#          file: ./Dockerfile
#          builder: ${{ steps.buildx.outputs.name }}
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache


#  approved_deploy:
#    if: github.event.pull_request.merged == true
#    environment: staging
#    name:   approved_deploy
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Login Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
#
#      - name: Build and Push Docker Image
#        run: |
#          docker build -t dungc/hello-cicd:${{ github.sha }} .
#          docker tag dungc/hello-cicd:${{ github.sha }} dungc/hello-cicd:latest
#          docker push dungc/hello-cicd:${{ github.sha }}
#          docker push dungc/hello-cicd:latest
#
#      - name: Report Status success
#        if: success()
#        id: slack_success
#        uses: slackapi/slack-github-action@v1.25.0
#        with:
#          payload: |
#            {
#              "text": "Deloy finished !"
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
#
#      - name: Report Status fail
#        if: failure()
#        id: slack_fail
#        uses: slackapi/slack-github-action@v1.25.0
#        with:
#          payload: |
#            {
#              "text": "Deloy Fail !"
#            }
#        env:
#          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
#          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
#
#      - name: Rollback Release
#        if: success()
#        run: |
#          docker update --restart=no $(docker ps -q)
#
#      - name: Pre build
#        if: failure()
#        uses: actions/checkout@v2
#
#      - name: Login Docker Hub
#        if: failure()
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

#      - name: Setup Docker Buildx
#        if: failure()
#        uses: docker/setup-buildx-action@v1
#        id: buildx_pre
#
#      - name: Cache Docker Image Layers
#        if: failure()
#        uses: actions/cache@v2
#        with:
#          path: /tmp/.buildx_pre-cache
#          key: ${{ runner.os }}-buildx_pre-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx_pre-
#
#      - name: Build and Push Docker Image
#        uses: docker/build-push-action@v2
#        id: docker_pre_build
#        with:
#          context: ./
#          file: ./Dockerfile
#          builder: ${{ steps.buildx_pre.outputs.name }}
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/hello-cicd
#          cache-from: type=local,src=/tmp/.buildx_pre-cache
#          cache-to: type=local,dest=/tmp/.buildx_pre-cache

#  approved:
#    needs: deploy_release
#    runs-on: ubuntu-latest
#    if: github.event_name == 'slack_interactive' && github.event.action.name == 'approve'
#    steps:
#      - name: Wait for approval
#        uses: actions/github-script@v5
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            github.repos.createDeploymentStatus({
#              ...context.repo,
#              deployment_id: context.payload.deployment.id,
#              state: 'success',
#              log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
#              description: 'Deployment approved and in progress.',
#              environment_url: 'https://github.com/dungnv-2032/hello-cicd/tree/master'
#            })
#            return 'approved'
