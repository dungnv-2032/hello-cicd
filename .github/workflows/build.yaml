name: ci-cd
on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
    types:
      - closed
jobs:
  deploy_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Add your deployment steps here, such as building and deploying your application
      - name: Deploying Application
        run: echo "Deploying application..."

      # Notify Slack with an interactive message
      - name: Send custom JSON data to Slack workflow
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "Would you like to play a game?",
              "attachments": [
                {
                  "text": "*Deployment Status*:
                            - Repository: ${{ github.repository }}
                            - Branch: ${{ github.ref }}
                            - Commit: ${{ github.sha }}
                            - Status: ${{ job.status }}
                            - Event Name: ${{ github.event_name }}
                            - Event Path: ${{ github.event_path }}
                            - Action Run ID: ${{ github.run_id }}
                            - Action Run Number: ${{ github.run_number }}",
                  "attachment_type": "default",
                  "actions": [
                    {
                      "name": "approved",
                      "text": "approve",
                      "type": "button",
                      "value": "approved"
                      "style": "primary"
                    },
                    {
                      "name": "cancel",
                      "text": "Cancel",
                      "type": "button",
                      "value": "cancel"
                      "style": "danger"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

  approved:
    needs: deploy_release
    runs-on: ubuntu-latest
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'pending'
    steps:
      - name: Wait for approval
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: context.payload.deployment.id,
              state: 'success',
              log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              description: 'Deployment approved and in progress.',
              environment_url: 'https://github.com/dungnv-2032/hello-cicd/tree/master'
            })
            return 'approved'

  cancel:
    needs: deploy_release
    runs-on: ubuntu-latest
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'pending'
    steps:
      - name: Wait for cancelation
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createDeploymentStatus({
              ...context.repo,
              deployment_id: context.payload.deployment.id,
              state: 'failure',
              log_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              description: 'Deployment canceled.',
              environment_url: 'https://github.com/dungnv-2032/hello-cicd/tree/master'
            })
            return 'canceled'